#!/bin/bash

set -e
if hash /usr/lib/gnupg/gpg-preset-passphrase 2> /dev/null; then
    gpgpass=/usr/lib/gnupg/gpg-preset-passphrase
fi

# Encryption subkeys
keygrips=(F05B5785E12C53D7043AF217949FBE83FB02BC8B)
keygrips+=(20DCA4E83C48EDE9267C9502C7A0712910DA7C5D)
keygrips+=(66963390C43AAE61DA6F668BF237638BCD8FBAFD)
keygrips+=(8725A9CF2F7C6C2177E449EDDDE9722605BED5AE)
keygrips+=(9CABF97D9E355AC5CB07EEA23B98D863947C2E4F)
keygrips+=(5381D1D87605CE3BF58D4890C9E3B0D705246595)
# signature subkeys
keygrips_signature=(F9F3A373044660E63E2E72420B58A8D3E900DFD6)
keygrips_signature+=(F26D97381E26765547C43827C9AD45A4BAFA22E2)

passentries=(keys/gpg-passwordstore keys/gpg-main keys/gpg-git-encryption keys/gpg-backup keys/gpg-rpmsigning)
passentries+=(keys/gpg-developer)

passentries_signature=(keys/gpg-rpmsigning keys/gpg-developer)
for i in "${!keygrips[@]}"; do
    pass show "${passentries[$i]}" | $gpgpass --verbose --preset "${keygrips[$i]}"
done

for i in "${!keygrips_signature[@]}"; do
    pass show "${passentries_signature[$i]}" | $gpgpass --verbose --preset "${keygrips_signature[$i]}"
done
