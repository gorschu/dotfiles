#!/bin/bash
# run_onchange_before - syncs SSH public keys from 1Password items tagged with "key" and "ssh"
# Hash: sync-ssh-keys-v1

set -euo pipefail

# Check if op CLI is available
if ! command -v op &>/dev/null; then
  echo "1Password CLI (op) not found, skipping SSH key sync"
  exit 0
fi

# Check if signed in
if ! op account list &>/dev/null; then
  echo "Not signed in to 1Password, skipping SSH key sync"
  exit 0
fi

echo "Syncing SSH public keys from 1Password..."

KEYS_DIR="{{ .chezmoi.homeDir }}/.ssh/keys.public"
mkdir -p "${KEYS_DIR}"

# Track which files we create/update
declare -a synced_files

# Get all items with tags "key" and "ssh"
op item list --tags ssh,key --format json | jq -r '.[].id' | while read -r item_id; do
  # Get item details
  item_json=$(op item get "${item_id}" --format json)
  title=$(echo "${item_json}" | jq -r '.title')

  # Extract public key from automatic "public key" field (created by 1Password)
  public_key=$(echo "${item_json}" | jq -r '
    .fields[] |
    select(.label == "public key" and .type == "STRING") |
    .value
  ')

  # Skip if no public key found
  if [[ -z "${public_key}" || "${public_key}" == "null" ]]; then
    echo "  No public key found for: ${title}"
    continue
  fi

  # Generate filename from title (remove "SSH Key " prefix, lowercase, replace spaces with hyphens)
  filename=$(echo "${title}" | sed 's/^SSH Key //' | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr -cd '[:alnum:]-._')

  # Write public key
  echo "${public_key}" > "${KEYS_DIR}/${filename}.pub"
  chmod 644 "${KEYS_DIR}/${filename}.pub"

  echo "  Synced: ${filename}.pub"

  # Track this file
  echo "${filename}.pub" >> "${KEYS_DIR}/.synced_files"
done

# Clean up files that are no longer in 1Password
if [[ -f "${KEYS_DIR}/.synced_files" ]]; then
  echo ""
  echo "Cleaning up removed keys..."

  # Get list of files that should exist
  sort -u "${KEYS_DIR}/.synced_files" > "${KEYS_DIR}/.synced_files.sorted"
  mv "${KEYS_DIR}/.synced_files.sorted" "${KEYS_DIR}/.synced_files"

  # Check all .pub files in directory
  find "${KEYS_DIR}" -maxdepth 1 -name "*.pub" -type f | while read -r pubfile; do
    basename_file=$(basename "${pubfile}")

    if ! grep -qFx "${basename_file}" "${KEYS_DIR}/.synced_files"; then
      echo "  Removing: ${basename_file} (no longer in 1Password)"
      rm -f "${pubfile}"
    fi
  done
fi

echo "SSH public keys synced from 1Password"
