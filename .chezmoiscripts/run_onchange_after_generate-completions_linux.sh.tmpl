#!/bin/bash
# run_onchange_after - generates shell completions for installed binaries
{{- $versions := includeTemplate "externals/versions-binaries.toml" . | fromToml -}}
{{- $externalsCtx := merge (dict "versions" $versions.versions) . -}}
# Dependencies hash: {{ includeTemplate "externals/externals-binaries.toml" $externalsCtx | sha256sum }}

set -euo pipefail

echo "Generating shell completions..."

# Completion directories
BASH_COMPLETIONS="${HOME}/.local/share/bash-completion/completions"
ZSH_COMPLETIONS="${HOME}/.zsh/.zsh_completions.d"

# Create completion directories
mkdir -p "${BASH_COMPLETIONS}"
mkdir -p "${ZSH_COMPLETIONS}"

# Helper function to generate completions
# Usage: generate_completion <command> <bash-args> <zsh-args>
generate_completion() {
  local cmd="$1"
  local bash_args="$2"
  local zsh_args="$3"

  if command -v "$cmd" &>/dev/null; then
    echo "  Generating $cmd completions..."
    $cmd "$bash_args" >"${BASH_COMPLETIONS}/${cmd}" 2>/dev/null || true
    $cmd "$zsh_args" >"${ZSH_COMPLETIONS}/_${cmd}" 2>/dev/null || true
  fi
}

# Generate completions for all tools
generate_completion "eza" "--generate-completions bash" "--generate-completions zsh"
generate_completion "atuin" "gen-completions --shell bash" "gen-completions --shell zsh"
generate_completion "topgrade" "--gen-completion bash" "--gen-completion zsh"
generate_completion "zellij" "setup --generate-completion bash" "setup --generate-completion zsh"
generate_completion "chezmoi" "completion bash" "completion zsh"
generate_completion "gopass" "completion bash" "completion zsh"
generate_completion "gh" "completion -s bash" "completion -s zsh"
generate_completion "mani" "completion bash" "completion zsh"

echo "  Shell completions generated"
