---
# Networking configuration - hostname, NetworkManager, and tailscale

- name: Configure NetworkManager
  become: true
  block:
    - name: Create wired ethernet connections for each interface
      community.general.nmcli:
        conn_name: "wired-{{ item }}"
        ifname: "{{ item }}"
        type: ethernet
        autoconnect: "yes"
        autoconnect_priority: 100
        method4: auto
        method6: auto
        state: present
      loop: "{{ ansible_interfaces | select('match', '^en') }}"
      notify: Reload NetworkManager

    - name: Create WiFi connections from vault
      community.general.nmcli:
        conn_name: "{{ item.0.key }}"
        ifname: "{{ item.1 }}"
        type: wifi
        ssid: "{{ item.0.value.ssid }}"
        wifi_sec:
          key-mgmt: wpa-psk
          psk: "{{ item.0.value.psk }}"
        autoconnect: "no"
        method4: auto
        method6: auto
        state: present
      loop: "{{ networking_wifi_networks | dict2items | product(ansible_interfaces | select('match', '^wl')) | list }}"
      when: networking_wifi_networks is defined
      notify: Reload NetworkManager

    - name: Deploy NetworkManager dispatcher script for WiFi management
      ansible.builtin.copy:
        src: dispatcher-manage-wifi
        dest: /etc/NetworkManager/dispatcher.d/99-manage-wifi
        mode: "0755"
        owner: root
        group: root
      notify: Reload NetworkManager

    - name: Ensure NetworkManager dispatcher service is enabled and running
      ansible.builtin.systemd_service:
        name: NetworkManager-dispatcher
        state: started
        enabled: true

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"
  become: true
  when: hostname is defined

- name: Add hostname to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "^127\\.0\\.1\\.1\\s"
    line: "127.0.1.1 {{ hostname }}"
    state: present
  become: true
  when: hostname is defined

- name: Install and configure Tailscale
  when: networking_tailscale_oauth_client_id is defined and networking_tailscale_oauth_client_secret is defined
  become: true
  block:
    - name: Enable Tailscale with OAuth
      ansible.builtin.include_role:
        name: artis3n.tailscale.machine
      vars:
        tailscale_authkey: "{{ networking_tailscale_oauth_client_secret }}"
        tailscale_tags:
          - "workstation"
        tailscale_oauth_ephemeral: false
        tailscale_args: "--hostname={{ hostname }}"
