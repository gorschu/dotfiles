---
# Resticprofile - system-level backup management for /home

- name: Resticprofile setup
  become: true
  block:
    - name: Install resticprofile
      when: resticprofile_state == 'present'
      block:
        - name: Install restic package
          ansible.builtin.dnf:
            name: restic
            state: present

        - name: Create resticprofile bin directory
          ansible.builtin.file:
            path: "{{ resticprofile_bin_path }}"
            state: directory
            mode: "0755"
            owner: root
            group: root

        - name: Check if resticprofile binary already installed with correct version
          ansible.builtin.command:
            cmd: "{{ resticprofile_bin_path }}/resticprofile version"
          register: resticprofile_installed_version
          changed_when: false
          failed_when: false

        - name: Update resticprofile if needed
          when: resticprofile_installed_version.rc != 0 or
                resticprofile_version not in resticprofile_installed_version.stdout
          block:
            - name: Download resticprofile binary
              ansible.builtin.get_url:
                url: "https://github.com/creativeprojects/resticprofile/releases/download/v\
                  {{ resticprofile_version }}/resticprofile_{{ resticprofile_version }}_\
                  linux_amd64.tar.gz"
                dest: /tmp/resticprofile.tar.gz
                mode: "0600"

            - name: Extract resticprofile binary
              ansible.builtin.unarchive:
                src: /tmp/resticprofile.tar.gz
                dest: "{{ resticprofile_bin_path }}"
                remote_src: true

            - name: Fix ownership and permissions of extracted binary
              ansible.builtin.file:
                path: "{{ resticprofile_bin_path }}"
                state: directory
                owner: root
                group: root
                mode: "0755"
                recurse: true

            - name: Cleanup download
              ansible.builtin.file:
                path: /tmp/resticprofile.tar.gz
                state: absent

        - name: Create resticprofile config directory
          ansible.builtin.file:
            path: /etc/resticprofile
            state: directory
            mode: "0700"
            owner: root
            group: root

        - name: Create resticprofile hooks directory
          ansible.builtin.file:
            path: /etc/resticprofile/hooks
            state: directory
            mode: "0700"
            owner: root
            group: root

        - name: Create resticprofile state directory
          ansible.builtin.file:
            path: /var/lib/resticprofile
            state: directory
            mode: "0755"
            owner: root
            group: root

        - name: Set resticprofile credentials from vault
          ansible.builtin.set_fact:
            resticprofile_backend_credentials: "{{ resticprofile_backends }}"
            resticprofile_backend_names: "{{ resticprofile_backends.keys() | list }}"
            resticprofile_pushover_token: "{{ resticprofile_pushover.token }}"
            resticprofile_pushover_user_key: "{{ resticprofile_pushover.user_key }}"
          no_log: true

        - name: Deploy profiles.toml with restricted permissions
          ansible.builtin.template:
            src: profiles.toml.j2
            dest: /etc/resticprofile/profiles.toml
            mode: "0600"
            owner: root
            group: root
          notify: Systemd daemon-reload

        - name: Deploy pushover notification template
          ansible.builtin.template:
            src: pushover-failure.json.j2
            dest: /etc/resticprofile/hooks/pushover-failure.json
            mode: "0600"
            owner: root
            group: root

        - name: Deploy excludes.txt
          ansible.builtin.copy:
            src: excludes.txt
            dest: /etc/resticprofile/excludes.txt
            mode: "0600"
            owner: root
            group: root

        - name: Deploy backend-specific env files with restricted permissions
          ansible.builtin.template:
            src: backend.env.j2
            dest: "/etc/resticprofile/{{ item }}.env"
            mode: "0600"
            owner: root
            group: root
          vars:
            backend: "{{ item }}"
          loop: "{{ resticprofile_backend_names }}"
          no_log: true

        - name: Flush handlers before running resticprofile schedule
          ansible.builtin.meta: flush_handlers

        - name: Generate systemd units via resticprofile schedule
          ansible.builtin.command:
            cmd: "{{ resticprofile_bin_path }}/resticprofile schedule --all --start --reload"
          changed_when: true
          failed_when: resticprofile_schedule_result.rc != 0
          register: resticprofile_schedule_result

        - name: Display resticprofile schedule output
          ansible.builtin.debug:
            msg: "{{ resticprofile_schedule_result.stdout_lines }}"

        - name: Check if status.json exists
          ansible.builtin.stat:
            path: /var/lib/resticprofile/status.json
          register: resticprofile_status_json_stat

        - name: Ensure status.json is readable by users
          ansible.builtin.file:
            path: /var/lib/resticprofile/status.json
            mode: "0644"
            owner: root
            group: root
          when: resticprofile_status_json_stat.stat.exists

    - name: Uninstall resticprofile
      when: resticprofile_state == 'absent'
      block:
        - name: Unschedule all resticprofile timers
          ansible.builtin.command:
            cmd: "{{ resticprofile_bin_path }}/resticprofile unschedule --all"
          changed_when: true
          failed_when: false
          register: resticprofile_unschedule_result

        - name: Display unschedule output
          ansible.builtin.debug:
            msg: "{{ resticprofile_unschedule_result.stdout_lines }}"

        - name: Systemd daemon-reload after unscheduling
          ansible.builtin.systemd_service:
            daemon_reload: true

        - name: Remove resticprofile config directory
          ansible.builtin.file:
            path: /etc/resticprofile
            state: absent

        - name: Remove resticprofile state directory
          ansible.builtin.file:
            path: /var/lib/resticprofile
            state: absent

        - name: Remove resticprofile binary directory
          ansible.builtin.file:
            path: "{{ resticprofile_path }}"
            state: absent

        - name: Remove restic package
          ansible.builtin.dnf:
            name: restic
            state: absent
