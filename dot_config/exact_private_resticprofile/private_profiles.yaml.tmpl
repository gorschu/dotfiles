# -*- mode: yaml -*-

global:
  restic-lock-retry-after: 1m
  restic-stale-lock-age: 2h
  systemd-unit-template: service.tmpl
  systemd-timer-template: timer.tmpl

default:
  initialize: false
  force-inactive-lock: true
  verbose: true

  status-file: "/tmp/resticprofile/{{ "-- .Profile.Name ++" | replace "-" "{" | replace "+" "}" }}-status.json"
  password-file: "{{ "-- .ConfigDir ++" | replace "-" "{" | replace "+" "}" }}/restic-password-{{ "-- .Profile.Name ++" | replace "-" "{" | replace "+" "}" }}"
  lock: "{{ "-- if .Env.XDG_RUNTIME_DIR ++-- .Env.XDG_RUNTIME_DIR ++-- else ++/tmp-- end ++" | replace "-" "{" | replace "+" "}" }}/resticprofile/{{ "-- .Profile.Name ++" | replace "-" "{" | replace "+" "}" }}.lock"
  run-after: "curl -s --output /dev/null --form-string 'token={{ .backup.pushover.token }}' --form-string 'user={{ .backup.pushover.userKey }}' --form-string \"message=Restic $PROFILE_COMMAND successful on host '{{ .chezmoi.hostname }}' for profile '$PROFILE_NAME'.\" https://api.pushover.net/1/messages.json"
  run-after-fail:
    - "curl -s --output /dev/null --form-string 'token={{ .backup.pushover.token }}' --form-string 'user={{ .backup.pushover.userKey }}'  --form-string \"message=Restic $PROFILE_COMMAND failed on host '{{ .chezmoi.hostname }}' for profile '$PROFILE_NAME' with error: $ERROR.\" https://api.pushover.net/1/messages.json"
    {{ if eq .chezmoi.hostname "apollo" }}
    - curl -fsS -m 10 --retry 5 -o /dev/null https://hc-ping.com/8dd8e851-e4a6-4e4c-832d-705ef1885499/fail
    {{ end }}

  backup:
    one-file-system: true
    schedule-lock-wait: "1h"
    exclude-caches: true
    exclude-if-present: ".nobackup"
    check-before: false
    tag:
      - "{{ "--.Profile.Name ++" | replace "-" "{" | replace "+" "}" }}"
      - "{{ "--.Hostname ++" | replace "-" "{" | replace "+" "}" }}"
    host: true

workstations-backblaze:
  inherit: "default"
  repository: "{{ .backup.restic.backblaze.repositoryUrl }}"
  limit-upload: 3000

  env:
    B2_ACCOUNT_ID: "{{ .backup.restic.backblaze.accountId }}"
    B2_ACCOUNT_KEY: "{{ .backup.restic.backblaze.accountKey }}"

  backup:
    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/restic/home/azmo
    {{ end }}
    exclude-file: "{{ "-- .ConfigDir ++" | replace "-" "{" | replace "+" "}" }}/restic-excludes-workstations-remote"

    schedule: "00/2:30"
    schedule-permission: "system"

    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      {{ if eq .chezmoi.hostname "apollo" }}
      - curl -fsS -m 10 --retry 5 -o /dev/null https://hc-ping.com/8dd8e851-e4a6-4e4c-832d-705ef1885499/start
      {{ end }}
      - mount -o bind $(/usr/local/bin/btrbk --format=raw list latest home | sed -r "s/^.*snapshot_subvolume='([0-9A-Za-z\/\.\-]+)'.*$/\1/") /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    run-after:
      {{ if eq .chezmoi.hostname "apollo" }}
      - curl -fsS -m 10 --retry 5 -o /dev/null https://hc-ping.com/8dd8e851-e4a6-4e4c-832d-705ef1885499
      {{ end }}
    run-finally:
      - umount /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      {{ if eq .chezmoi.hostname "apollo" }}
      - curl -fsS -m 10 --retry 5 -o /dev/null https://hc-ping.com/8dd8e851-e4a6-4e4c-832d-705ef1885499/start
      {{ end }}
      - mkdir -p /mnt/restic/home/azmo
      - zfs list -t snapshot -s creation -o name -H dpool/home/azmo | tail -1 > /tmp/ar-home-azmo-latest
      - zfs clone $(cat /tmp/ar-home-azmo-latest) -o mountpoint=/mnt/restic/home/azmo dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
      - zfs get all $(cat /tmp/ar-home-azmo-latest) > /mnt/restic/home/azmo/dpool.snapshot.home.azmo.txt
      - zfs set readonly=on dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
    run-after:
      {{ if eq .chezmoi.hostname "apollo" }}
      - curl -fsS -m 10 --retry 5 -o /dev/null https://hc-ping.com/8dd8e851-e4a6-4e4c-832d-705ef1885499
      {{ end }}
    run-finally:
      - zfs destroy dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
   {{ end }}

  retention:
    before-backup: false
    after-backup: true
    keep-last: 30
    keep-hourly: 24
    keep-daily: 30
    keep-weekly: 4
    keep-monthly: 12
    keep-yearly: 0
    keep-within: "6h"
    tag: true

  forget:
    keep-last: 30
    keep-hourly: 24
    keep-daily: 30
    keep-weekly: 4
    keep-monthly: 12
    keep-yearly: 0
    keep-within: "6h"
    tag: true

  check:
    cache-dir: {{ env "XDG_CACHE_HOME" }}/restic-check
    with-cache: true
    read-data: false
    schedule: "Sun,Wed 10:30"
    schedule-permission: "system"

  prune:
    schedule: "Sun 14:30"
    schedule-permission: "system"

workstations-scaleway:
  inherit: "default"
  repository: "{{ .backup.restic.scaleway.repositoryUrl }}"
  limit-upload: 3000
  option:
    - "s3.region=fr-par"

  env:
    AWS_ACCESS_KEY_ID: "{{ .backup.restic.scaleway.accessKeyId }}"
    AWS_SECRET_ACCESS_KEY: "{{ .backup.restic.scaleway.accessKeySecret }}"

  backup:
    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/restic/home/azmo
    {{ end }}
    exclude-file: "{{ "-- .ConfigDir ++" | replace "-" "{" | replace "+" "}" }}/restic-excludes-workstations-remote"

    schedule: "00/2:30"
    schedule-permission: "system"

    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      - mount -o bind $(/usr/local/bin/btrbk --format=raw list latest home | sed -r "s/^.*snapshot_subvolume='([0-9A-Za-z\/\.\-]+)'.*$/\1/") /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    run-after:
      - umount /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      - mkdir -p /mnt/restic/home/azmo
      - zfs list -t snapshot -s creation -o name -H dpool/home/azmo | tail -1 > /tmp/ar-home-azmo-latest
      - zfs clone $(cat /tmp/ar-home-azmo-latest) -o mountpoint=/mnt/restic/home/azmo dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
      - zfs get all $(cat /tmp/ar-home-azmo-latest) > /mnt/restic/home/azmo/dpool.snapshot.home.azmo.txt
      - zfs set readonly=on dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
    run-finally:
      - zfs destroy dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
   {{ end }}

  retention:
    before-backup: false
    after-backup: true
    keep-last: 3
    keep-hourly: 24
    keep-daily: 14
    keep-weekly: 4
    keep-monthly: 12
    keep-yearly: 0
    keep-within: "6h"
    tag: true

  forget:
    keep-last: 3
    keep-hourly: 24
    keep-daily: 14
    keep-weekly: 4
    keep-monthly: 12
    keep-yearly: 0
    keep-within: "6h"
    tag: true

  check:
    cache-dir: {{ env "XDG_CACHE_HOME" }}/restic-check
    with-cache: true
    read-data: false
    schedule: "Sun,Wed 10:30"
    schedule-permission: "system"

  prune:
    schedule: "Sun 14:30"
    schedule-permission: "system"

workstations-zeus:
  inherit: "default"

  repository: "{{ .backup.restic.zeus.repositoryUrl }}"

  backup:
    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/restic/home/azmo
    {{ end }}
    exclude-file: "{{ "-- .ConfigDir ++" | replace "-" "{" | replace "+" "}" }}/restic-excludes-workstations-local"

    schedule: "hourly"
    schedule-permission: "system"

    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      - mount -o bind $(/usr/local/bin/btrbk --format=raw list latest home | sed -r "s/^.*snapshot_subvolume='([0-9A-Za-z\/\.\-]+)'.*$/\1/") /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    run-after:
      - umount /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      - mkdir -p /mnt/restic/home/azmo
      - zfs list -t snapshot -s creation -o name -H dpool/home/azmo | tail -1 > /tmp/ar-home-azmo-latest
      - zfs clone $(cat /tmp/ar-home-azmo-latest) -o mountpoint=/mnt/restic/home/azmo dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
      - zfs get all $(cat /tmp/ar-home-azmo-latest) > /mnt/restic/home/azmo/dpool.snapshot.home.azmo.txt
      - zfs set readonly=on dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
    run-finally:
      - sleep 10 && zfs destroy dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
   {{ end }}

  retention:
    before-backup: false
    after-backup: true
    keep-last: 60
    keep-hourly: 24
    keep-daily: 90
    keep-weekly: 12
    keep-monthly: 24
    keep-yearly: 2
    keep-within: "24h"
    tag: true

  forget:
    keep-last: 60
    keep-hourly: 24
    keep-daily: 90
    keep-weekly: 12
    keep-monthly: 24
    keep-yearly: 2
    keep-within: "24h"
    tag: true

  check:
    cache-dir: {{ env "XDG_CACHE_HOME" }}/restic-check
    with-cache: true
    read-data-subset: 10%
    schedule: "Fri 08:45"
    schedule-permission: "system"

  prune:
    schedule: "Mon 08:45"
    schedule-permission: "system"
