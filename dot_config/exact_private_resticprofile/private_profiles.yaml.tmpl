# -*- mode: yaml -*-

global:
  restic-lock-retry-after: 1m
  restic-stale-lock-age: 2h
  systemd-unit-template: service.tmpl

default:
  initialize: false

  status-file: "/tmp/resticprofile/{{ "-- .Profile.Name ++" | replace "-" "{" | replace "+" "}" }}-status.json"
  password-file: "{{ "-- .ConfigDir ++" | replace "-" "{" | replace "+" "}" }}/restic-password-{{ "-- .Profile.Name ++" | replace "-" "{" | replace "+" "}" }}"
  lock: "{{ "-- if .Env.XDG_RUNTIME_DIR ++-- .Env.XDG_RUNTIME_DIR ++-- else ++/tmp-- end ++" | replace "-" "{" | replace "+" "}" }}/resticprofile/{{ "-- .Profile.Name ++" | replace "-" "{" | replace "+" "}" }}.lock"
  run-after: "curl -s --form-string 'token={{ (onepasswordItemFields "Pushover").restic.value }}' --form-string 'user={{ (onepasswordItemFields "Pushover").UserKey.value }}' --form-string \"message=Restic $PROFILE_COMMAND successful on host '{{ .chezmoi.fqdnHostname }}' for profile '$PROFILE_NAME'.\" https://api.pushover.net/1/messages.json"
  run-after-fail: "curl -s --form-string 'token={{ (onepasswordItemFields "Pushover").restic.value }}' --form-string 'user={{ (onepasswordItemFields "Pushover").UserKey.value }}'  --form-string \"message=Restic $PROFILE_COMMAND failed on host '{{ .chezmoi.hostname }}' for profile '$PROFILE_NAME' with error: $ERROR.\" https://api.pushover.net/1/messages.json"

  backup:
    one-file-system: true
    schedule-lock-wait: "1h"

workstations:
  inherit: "default"
  repository: "{{ (onepasswordItemFields "Backup Restic/Workstations").RepositoryURL.value }}"
  force-inactive-lock: true
  verbose: true
  option:
    - "s3.region=fr-par"
    - "limit-upload=3000"

  env:
    AWS_ACCESS_KEY_ID: "{{ (onepasswordItemFields "Scaleway").restic_Access_Key_ID.value }}"
    AWS_SECRET_ACCESS_KEY: "{{ (onepasswordItemFields "Scaleway").restic_Access_Key_Secret.value }}"

  backup:
    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    source: /mnt/restic/home/azmo
    {{ end }}
    exclude-caches: true
    exclude-if-present: ".exclude_from_backup"
    exclude-file: "{{ "-- .ConfigDir ++" | replace "-" "{" | replace "+" "}" }}/restic-excludes-workstations"
    check-before: false
    tag:
      - "{{ "--.Profile.Name ++" | replace "-" "{" | replace "+" "}" }}"
      - "{{ "--.Hostname ++" | replace "-" "{" | replace "+" "}" }}"
    host: true
    schedule: "hourly"
    schedule-permission: "system"
    {{ if regexFind "/home btrfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      - mount -o bind $(/usr/local/bin/btrbk --format=raw list latest home | sed -r "s/^.*snapshot_subvolume='([0-9A-Za-z\/\.\-]+)'.*$/\1/") /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    run-after:
      - umount /mnt/btrfs-root/btrbk-snapshots/{{ .chezmoi.hostname }}.home.latest
    {{ else if regexFind "/home zfs" (output "/usr/bin/cat" "/proc/mounts") }}
    run-before:
      - mkdir -p /mnt/restic/home/azmo
      - zfs list -t snapshot -s creation -o name -H dpool/home/azmo | tail -1 > /tmp/ar-home-azmo-latest
      - zfs clone $(cat /tmp/ar-home-azmo-latest) -o mountpoint=/mnt/restic/home/azmo -o readonly=on dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
      - zfs get all $(cat /tmp/ar-home-azmo-latest) > /mnt/restic/dpool.home.azmo-all
    run-finally:
      - zfs destroy dpool/tmp-restic-$(zfs get -H -o value guid $(cat /tmp/ar-home-azmo-latest))
   {{ end }}

  forget:
    schedule-permission: "system"
    before-backup: false
    after-backup: true
    keep-last: 3
    keep-hourly: 12
    keep-daily: 14
    keep-weekly: 4
    keep-monthly: 12
    keep-yearly: 0
    keep-within: "6h"
    tag: true

  check:
    read-data: false
    schedule: "Sun,Wed 10:30"
    schedule-permission: "system"

  prune:
    schedule: "Sun 14:30"
    schedule-permission: "system"
