# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
include {{ env "XDG_CONFIG_HOME" }}/sway/colors.nord
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty --single-instance
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run --no-overlap --fn "Monospace 10" --margin 10 --ignorecase --prompt "> run" --nb "#2e3440" --fb "#2e3440" --tb "#2e3440" --hb "#2e3440" --tf "#81a1c1" --hf "#b48ead" --prompt run | xargs swaymsg exec --

xwayland enable

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
set $wallpapers_path $HOME/Pictures/wallpapers
output * bg $(find $wallpapers_path -type f | shuf -n 1) fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

default_border pixel 2
default_floating_border pixel 3

gaps inner 4
gaps outer 2
smart_gaps on
smart_borders on

input * {
    xkb_layout "de,us,fr"
    xkb_variant "nodeadkeys"
    xkb_numlock enabled
    # both ctrls to toggle keymap
    xkb_options "caps:escape,grp:ctrls_toggle"
    xkb_model "pc105"
    repeat_delay 250
    repeat_rate 40
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
}

hide_edge_borders smart

font pango:Sans 9
focus_follows_mouse no

floating_modifier $mod

# change workspaces with $mod+tab
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
# auto_back_and_forth by hitting current workspace again to go back
workspace_auto_back_and_forth yes




    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:
set $workspace1 1
set $workspace2 2
set $workspace3 3
set $workspace4 4
set $workspace5 5
set $workspace6 6
set $workspace7 7
set $workspace8 8
set $workspace9 9
set $workspace10 10
# multi-monitor laptops
{{ if eq .chezmoi.hostname "apollo" }}
workspace $workspace1 output  eDP-1 DP-4
workspace $workspace2 output  eDP-1 DP-4
workspace $workspace3 output  eDP-1 DP-4
workspace $workspace4 output  eDP-1 DP-4
workspace $workspace5 output  eDP-1 DP-3
workspace $workspace6 output  eDP-1 DP-3
workspace $workspace7 output  eDP-1 DP-3
workspace $workspace8 output  eDP-1 DP-3
workspace $workspace9 output  eDP-1 DP-3
workspace $workspace10 output eDP-1 DP-3
{{ else if eq .chezmoi.hostname "artemis" }}
workspace $workspace1 output  DP-0.1
workspace $workspace2 output  DP-0.1
workspace $workspace3 output  DP-0.1
workspace $workspace4 output  DP-0.1
workspace $workspace5 output  DP-0.1
workspace $workspace6 output  DP-0.8
workspace $workspace7 output  DP-0.8
workspace $workspace8 output  DP-0.8
workspace $workspace9 output  DP-0.8
workspace $workspace10 output DP-0.8
{{ end }}
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+t layout tabbed
    bindsym $mod+e layout toggle split
    # make current window tabbed and open next window in horizontal split (good for opening gui applications from terminal)
    bindsym $mod+n split horizontal; layout tabbed

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

bar swaybar_command waybar

include {{ env "XDG_CONFIG_HOME" }}/sway/modes
include {{ env "XDG_CONFIG_HOME" }}/sway/keybinds
include {{ env "XDG_CONFIG_HOME" }}/sway/window-rules
include {{ env "XDG_CONFIG_HOME" }}/sway/autostart

include /etc/sway/config.d/*
