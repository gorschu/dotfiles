# environment variables relevant for whole X-Session, not just shells
{{ if eq .chezmoi.osRelease.id "opensuse-leap" "opensuse-tumbleweed" }}
. /etc/zshenv
{{ else if eq .chezmoi.osRelease.id "ubuntu" "debian" }}
. /etc/zsh/zshenv
{{ end }}

export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_CACHE_HOME="${HOME}/.cache"

export TMPDIR="/tmp/${USER}"
systemctl --user import-environment XDG_CONFIG_HOME XDG_DATA_HOME XDG_CACHE_HOME TMPDIR

# requires qt5ct (and settings there)
# Let KDE and GNOME handle themselves
expr "$XDG_CURRENT_DESKTOP" : ".*\(KDE\|GNOME\).*" 1>/dev/null || export QT_QPA_PLATFORMTHEME="qt5ct"

# set SSH Variables
{{ $ssh_askpass_base := "" }}
{{ $kssh_askpass_base := "" }}
{{ if eq .chezmoi.osRelease.id "opensuse-leap" "opensuse-tumbleweed" }}
    {{ $ssh_askpass_base = "/usr/libexec/ssh" }}
    {{ $kssh_askpass_base = $ssh_askpass_base }}
{{ else if eq .chezmoi.osRelease.id "ubuntu" "debian" }}
    {{ $ssh_askpass_base = "/usr/lib/openssh" }}
    {{ $kssh_askpass_base = "/bin" }}
{{ else if eq .chezmoi.osRelease.id "fedora" }}
    {{ $ssh_askpass_base = "/usr/libexec/openssh" }}
    {{ $kssh_askpass_base = "/usr/bin" }}
{{ else if eq .chezmoi.osRelease.id "arch" }}
    {{ $ssh_askpass_base = "/usr/lib/ssh" }}
    {{ $kssh_askpass_base = "/usr/bin" }}
{{ end }}
expr "$XDG_CURRENT_DESKTOP" : ".*GNOME.*" 1>/dev/null && export SSH_ASKPASS={{ $ssh_askpass_base }}/gnome-ssh-askpass
expr "$XDG_CURRENT_DESKTOP" : ".*KDE.*" 1>/dev/null && export SSH_ASKPASS={{ $kssh_askpass_base }}/ksshaskpass
[ -z "$SSH_ASKPASS" ] && export SSH_ASKPASS={{ $ssh_askpass_base }}/x11-ssh-askpass

# only set SSH_AUTH_SOCK when we not connected via SSH
# else we break SSH Agent Forwarding
if [[ -z ${SSH_CLIENT} ]]; then
  if [[ -S ${HOME}/.1password/agent.sock ]]; then
    export SSH_AUTH_SOCK="${HOME}/.1password/agent.sock"
  else
    export SSH_AUTH_SOCK=${XDG_RUNTIME_DIR}/ssh-agent.socket
  fi
  # import to systemctl user-environment
  systemctl --user import-environment SSH_AUTH_SOCK SSH_ASKPASS
fi

# use new freetype 2.7 default interpreter
export FREETYPE_PROPERTIES="truetype:interpreter-version=40"

# Editors
export ALTERNATE_EDITOR=""

if command -v "lvim" >/dev/null; then
    export EDITOR="lvim"
    export GIT_EDITOR="lvim"
    export VISUAL="lvim"
elif command -v "nvim" >/dev/null; then
    export EDITOR="nvim"
    export GIT_EDITOR="nvim"
    export VISUAL="nvim"
elif command -v "vim" >/dev/null; then
    export EDITOR="vim"
    export GIT_EDITOR="vim"
    export VISUAL="vim"
fi

if command -v "bat" >/dev/null; then
    export PAGER="bat"
else
    export PAGER='less'
fi

export PASSWORD_STORE_X_SELECTION="primary"
export PASSWORD_STORE_CLIP_TIME="60"
export PASSWORD_STORE_ENABLE_EXTENSIONS=true
# for openkeychain on android, hardened gpg config throws them away
export PASSWORD_STORE_GPG_OPTS='--no-throw-keyids'

expr "$XDG_SESSION_TYPE" = "wayland" 1>/dev/null && export export MOZ_ENABLE_WAYLAND=1

# virtualenv
export WORKON_HOME=$HOME/.cache/virtualenvs
export PROJECT_HOME=$HOME/projects

export LESS='-F -i -M -R -S -w -X -z-4'

# ls options
export TIME_STYLE=long-iso
export BLOCK_SIZE="'1"

export NOTMUCH_CONFIG=${XDG_CONFIG_HOME}/mail/notmuch-config

# set DOCKER_HOST to podman
export DOCKER_HOST=unix:///run/user/$(id -u)/podman/podman.sock

# texlive
export TEXMFHOME=$XDG_DATA_HOME/texmf
export TEXMFVAR=$XDG_CACHE_HOME/texlive/texmf-var
export TEXMFCONFIG=$XDG_CONFIG_HOME/texlive/texmf-config

# workaround for 1Password messing with wrong locales
export OP_LOCALE=en_US
